account:
  title: Account
  title_plural: Accounts
  description: Accounts associate an IAM user with an auth method
  messages:
    welcome:
      title: Welcome to Accounts
      description: Create and manage accounts for an auth method.
    set-password:
      description: Set a password for the account.
  types:
    password: Password
  actions:
    create: Create Account
    delete: Delete Account
auth-method:
  title: Auth Method
  title_plural: Auth Methods
  description: An authentication method is a method configured for an Organization to authenticate Users. An Authentication Method is owned by one and only one Organization.
  messages:
    welcome:
      title: Welcome to Auth Methods
      description: Auth methods are configurations to authenticate users.
    none:
      title: No Authentication Methods
      description: No authentication methods were found for this scope.  Switch scopes and try again.
  types:
    password: Password
  actions:
    create: Create Auth Method
    delete: Delete Auth Method
user: User
users: Users
role: Role
roles: Roles
group: Group
groups: Groups
orgs: Orgs
org: Org
projects: Projects
project: Project
host-catalog: Host Catalog
host-catalogs: Host Catalogs
host-set: Host Set
host-sets: Host Sets
host: Host
hosts: Hosts
target: Target
targets: Targets
sessions: Sessions
session: Session
descriptions:
  user: A User inherits from Principal ("is-a" Principal) allowing it to be associated with zero or more Roles.
  users: A user is any entity authorized to access Boundary using authentication credentials specific to one of the configured Authentication Methods. A User is owned by one and only one Organization. A User is associated with zero or one Authentication Methods. A User not associated with an Authentication Method can not log in to the system. A User can belong to zero or more Groups. A User is deleted when the Organization it belongs to is deleted. The lifecycle of a User is not tied to the lifecycle of any Authentication Method, Group or Role, but rather to its Organization only.
  role: A Role can be assigned to zero or more Principals. A Principal assigned a Role receives all capabilities granted by any Direct Grant owned by the Role. A Role is deleted when the Scope it belongs to is deleted. All Direct Grants owned by a Role are deleted when the Role is deleted.
  roles: A role is a collection of capabilities granted to any Principal the Role is assigned to. A Role belongs to one and only one Scope. A Role owns zero or more Direct Grants. The lifecycle of a Role is not tied to the lifecycle of any Principal.
  grants: A grant represents a set of capabilities granted to a role. It couples a set of Actions to either a set of Resource Types or an individual Resource. A Direct Grant belongs exclusively to one and only one Role. However, equivalent Direct Grants may exist across different Roles. A Direct Grant references one or more Actions and either one or more Resource types or one specific Resource. A Direct Grant is deleted when the Role it belongs to is deleted. A Direct Grant is also deleted if it is associated with a specific Resource and that Resource itself is deleted. The lifecycle of a Direct Grant is not tied to the lifecycle of any Action or Resource Type.
  principals: A principal is any entity which can be assigned capabilities. Principal is abstract. User, Group, and Project are concrete Principals. A Principal can be assigned to zero or more Roles.
  add-principals: TBD
  group: All Users in a Group are granted the capabilities of all Roles the Group is associated with. A Group is deleted when the Scope it belongs to is deleted.
  groups: Groups are collections of Users used only for access control purposes. A Group is owned by one and only one Scope. A Group can contain zero or more Users. A Group inherits from Principal ("is-a" Principal) allowing it to be associated with zero or more Roles. The lifecycle of a Group is not tied to the lifecycle of any User or Role.
  group-members: TBD
  add-group-members: TBD
  org: When an Organization is deleted, all resources owned by it are also deleted.
  orgs: An Organization is a top-level container, and owns zero to many Projects and zero to many Authentication Methods. An Organization inherits from Scope ("is-a" Scope) allowing it to own zero to many Groups, Roles, Targets, or Host Catalogs. The lifecycle of an Organization is not tied to anything else. A Role at the Organization level can grant permissions at the Project level.
  project: When a Project is deleted, all resources owned by it are also deleted. The lifecycle of a Project is not tied to any resource it contains.
  projects: A project is a child scope of an organization and is owned by an Organization. A Project inherits from Scope ("is-a" Scope) allowing it to own zero to many Groups, Roles, Targets, or Host Catalogs. A Project also inherits from Principal ("is-a" Principal) allowing it to be associated with zero or more Roles. A Project has no additional relationships beyond those defined in Scope and Principal. A Project is deleted when the Organization it belongs to is deleted.
  host-catalog: A host catalog is a permission boundary modeled as a container.
  host-catalogs: A host catalog is a permission boundary modeled as a container.
  host-set: Host Set is abstract. A Host Set is deleted when the Host Catalog it belongs to is deleted.
  host-sets: A host set is a resource which provides a subset of Hosts from the set of Hosts of the Host Catalog it belongs to. A Host Set belongs to one and only one Host Catalog. A Host Set can contain zero or more Hosts. A Host Set can be contained by zero or more Targets. The lifecycle of a Host Set is not tied to the lifecycle of any Targets or Hosts.
  host: Host is abstract. A Host is deleted when the Host Catalog it belongs to is deleted.
  hosts: A host is a computing element with a network address reachable from Boundary. A Host belongs to one and only one Host Catalog. A Host can be contained by zero or more Host Sets. The lifecycle of a Host is not tied to the lifecycle of any Host Sets.
  target: Target is abstract. A Target is deleted when the Scope it belongs to is deleted.
  targets: A target is a networked service a User can connect to and interact with through Boundary. A Target does not directly contain any secrets. A Target contains a collection of Hosts. A Target belongs to one and only one Scope. A Target can contain zero or more Host Sets. The lifecycle of a Target is not tied to the lifecycle of any Host Set.
  add-host-sets-to-target: TBD
  sessions: Sessions
  session: Session
