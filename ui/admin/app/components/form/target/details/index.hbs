<Rose::Form
  @onSubmit={{@submit}}
  @cancel={{@cancel}}
  @disabled={{@model.isSaving}}
  @showEditToggle={{if @model.isNew false true}}
  as |form|
>
  <Hds::Form::TextInput::Field
    @isRequired={{true}}
    @isOptional={{false}}
    @value={{@model.name}}
    @isInvalid={{@model.errors.name}}
    @type='text'
    name='name'
    disabled={{form.disabled}}
    {{on 'input' (set-from-event @model 'name')}}
    as |F|
  >
    <F.Label>{{t 'form.name.label'}}</F.Label>
    <F.HelperText>{{t 'form.name.help'}}</F.HelperText>
    {{#if @model.errors.name}}
      <F.Error as |E|>
        {{#each @model.errors.name as |error|}}
          <E.Message>{{error.message}}</E.Message>
        {{/each}}
      </F.Error>
    {{/if}}
  </Hds::Form::TextInput::Field>

  <Hds::Form::Textarea::Field
    @isRequired={{false}}
    @isOptional={{true}}
    @value={{@model.description}}
    @isInvalid={{@model.errors.description}}
    name='description'
    disabled={{form.disabled}}
    as |F|
  >
    <F.Label>{{t 'form.description.label'}}</F.Label>
    <F.HelperText>{{t 'form.description.help'}}</F.HelperText>
    {{#if @model.errors.description}}
      <F.Error as |E|>
        {{#each @model.errors.description as |error|}}
          <E.Message>{{error.message}}</E.Message>
        {{/each}}
      </F.Error>
    {{/if}}
  </Hds::Form::Textarea::Field>

  {{#if (and @model.isNew (feature-flag 'ssh-target'))}}
    <Hds::Form::RadioCard::Group @name='type' @alignment='center' as |G|>
      <G.Legend>{{t 'resources.target.form.type.label'}}</G.Legend>
      <G.HelperText>{{t 'resources.target.form.type.help'}}</G.HelperText>
      {{#each this.typeMetas as |type|}}
        <G.RadioCard
          @value={{type.type}}
          @maxWidth='20rem'
          @checked={{eq type.type @model.type}}
          {{on 'input' (fn @changeType type.type)}}
          as |R|
        >
          <R.Label>{{t (concat 'resources.target.types.' type.type)}}</R.Label>
          <R.Description>{{t
              (concat 'resources.target.help.' type.type)
            }}</R.Description>
          <R.Icon @name={{type.icon}} />
        </G.RadioCard>
      {{/each}}
    </Hds::Form::RadioCard::Group>

  {{else}}
    <InfoField
      @value={{t (concat 'resources.target.types.' @model.type)}}
      @icon={{this.icon}}
      as |F|
    >
      <F.Label>{{t 'form.type.label'}}</F.Label>
      <F.HelperText>
        {{t (concat 'resources.target.help.' @model.type)}}
      </F.HelperText>
    </InfoField>
  {{/if}}

  {{#if (feature-flag 'target-network-address')}}
    <Hds::Form::TextInput::Field
      @isRequired={{false}}
      @isOptional={{true}}
      @value={{@model.address}}
      @isInvalid={{@model.errors.address}}
      @type='text'
      name='address'
      disabled={{form.disabled}}
      {{on 'input' (set-from-event @model 'address')}}
      as |F|
    >
      <F.Label>{{t 'resources.target.form.target-address.label'}}</F.Label>
      <F.HelperText>{{t
          'resources.target.form.target-address.help'
        }}</F.HelperText>
      {{#if @model.errors.address}}
        <F.Error as |E|>
          {{#each @model.errors.address as |error|}}
            <E.Message>{{error.message}}</E.Message>
          {{/each}}
        </F.Error>
      {{/if}}
    </Hds::Form::TextInput::Field>
  {{/if}}

  <Hds::Form::TextInput::Field
    @isRequired={{@model.isTCP}}
    @isOptional={{not @model.isTCP}}
    @value={{@model.default_port}}
    @isInvalid={{@model.errors.default_port}}
    @type='text'
    name='default_port'
    disabled={{form.disabled}}
    placeholder={{@defaultPort}}
    {{on 'input' (set-from-event @model 'default_port')}}
    as |F|
  >
    <F.Label data-test-default-port-label>{{t
        'form.default_port.label'
      }}</F.Label>
    <F.HelperText>{{t 'form.default_port.help'}}</F.HelperText>
    {{#if @model.errors.default_port}}
      <F.Error as |E|>
        {{#each @model.errors.default_port as |error|}}
          <E.Message>{{error.message}}</E.Message>
        {{/each}}
      </F.Error>
    {{/if}}
  </Hds::Form::TextInput::Field>

  <Hds::Form::TextInput::Field
    @isRequired={{false}}
    @isOptional={{true}}
    @value={{@model.session_max_seconds}}
    @isInvalid={{@model.errors.session_max_seconds}}
    @type='text'
    name='session_max_seconds'
    disabled={{form.disabled}}
    {{on 'input' (set-from-event @model 'session_max_seconds')}}
    as |F|
  >
    <F.Label>{{t 'form.session_max_seconds.label'}}</F.Label>
    <F.HelperText>{{t 'form.session_max_seconds.help'}}</F.HelperText>
    {{#if @model.errors.session_max_seconds}}
      <F.Error as |E|>
        {{#each @model.errors.session_max_seconds as |error|}}
          <E.Message>{{error.message}}</E.Message>
        {{/each}}
      </F.Error>
    {{/if}}
  </Hds::Form::TextInput::Field>

  <Hds::Form::TextInput::Field
    @isRequired={{false}}
    @isOptional={{true}}
    @value={{@model.session_connection_limit}}
    @isInvalid={{@model.errors.session_connection_limit}}
    @type='text'
    name='session_connection_limit'
    disabled={{form.disabled}}
    {{on 'input' (set-from-event @model 'session_connection_limit')}}
    as |F|
  >
    <F.Label>{{t 'form.session_connection_limit.label'}}</F.Label>
    <F.HelperText>{{t 'form.session_connection_limit.help'}}</F.HelperText>
    {{#if @model.errors.session_connection_limit}}
      <F.Error as |E|>
        {{#each @model.errors.session_connection_limit as |error|}}
          <E.Message>{{error.message}}</E.Message>
        {{/each}}
      </F.Error>
    {{/if}}
  </Hds::Form::TextInput::Field>

  {{#if (feature-flag 'target-worker-filters-v2')}}
    <Hds::Form::Fieldset
      class='target-workers'
      @layout='horizontal'
      @isRequired={{false}}
      as |F|
    >
      <F.Legend>{{t 'resources.target.workers.title'}}</F.Legend>
      <F.HelperText>{{t 'resources.target.workers.description'}}</F.HelperText>
      {{#unless this.migrateWorkerFilter}}
        {{#if this.showDeprecationMessage}}
          <F.Control>
            <Hds::Alert @color='highlight' @type='inline' as |A|>
              <A.Title>{{t
                  'resources.target.workers.deprecation_message.title'
                }}</A.Title>
              <A.Description>{{t
                  'resources.target.workers.deprecation_message.description'
                }}</A.Description>
            </Hds::Alert>
          </F.Control>
          <F.Control>
            <Hds::Form::TextInput::Field
              @isRequired={{false}}
              @isOptional={{true}}
              @value={{@model.worker_filter}}
              @isInvalid={{@model.errors.worker_filter}}
              @type='text'
              name='worker_filter'
              disabled={{true}}
              {{on 'input' (set-from-event @model 'worker_filter')}}
              as |F|
            >
              <F.Label>{{t 'form.worker_filter.label'}}</F.Label>
              <F.HelperText>{{t 'form.worker_filter.help'}}</F.HelperText>
            </Hds::Form::TextInput::Field>
          </F.Control>
        {{/if}}
      {{/unless}}
    </Hds::Form::Fieldset>

    {{#if this.showUpdateWorkerFilterButton}}
      {{#if form.isEditable}}
        <Hds::Button
          class='update-filter-button'
          @text={{t
            'resources.target.workers.egress_worker_filter.filter.update_filter'
          }}
          @color='secondary'
          disabled={{form.disabled}}
          {{on 'click' this.migrateWorkerFilters}}
        />
      {{/if}}
    {{else}}
      <WorkerDiagram::SingleFilter
        @egressFilter={{this.egressWorkerFilterEnabled}}
      />
      <Form::Target::WorkerFilter
        @name='egress_worker_filter'
        @type='text'
        @disabled={{form.disabled}}
        @value={{@model.egress_worker_filter}}
        @toggleAction={{this.toggleEgressWorkerFilter}}
        @checked={{this.egressWorkerFilterEnabled}}
        @toggleEnabled={{this.egressWorkerFilterEnabled}}
        @errors={{@model.errors.egress_worker_filter}}
        @onChange={{set-from-event @model 'egress_worker_filter'}}
        @isInvalid={{@model.errors.egress_worker_filter}}
        as |F|
      >
        {{#if @model.errors.egress_worker_filter}}
          <F.Error as |E|>
            {{#each @model.errors.egress_worker_filter as |error|}}
              <E.Message>{{error.message}}</E.Message>
            {{/each}}
          </F.Error>
        {{/if}}
      </Form::Target::WorkerFilter>
    {{/if}}
  {{else}}
    <Hds::Form::TextInput::Field
      @isRequired={{false}}
      @isOptional={{true}}
      @value={{@model.worker_filter}}
      @isInvalid={{@model.errors.worker_filter}}
      @type='text'
      name='worker_filter'
      disabled={{form.disabled}}
      {{on 'input' (set-from-event @model 'worker_filter')}}
      as |F|
    >
      <F.Label>{{t 'form.worker_filter.label'}}</F.Label>
      <F.HelperText>{{t 'form.worker_filter.help'}}</F.HelperText>
      {{#if @model.errors.worker_filter}}
        <F.Error as |E|>
          {{#each @model.errors.worker_filter as |error|}}
            <E.Message>{{error.message}}</E.Message>
          {{/each}}
        </F.Error>
      {{/if}}
    </Hds::Form::TextInput::Field>
  {{/if}}

  {{#if (can 'save model' @model)}}
    <form.actions
      @enableEditText={{t 'actions.edit-form'}}
      @submitText={{t 'actions.save'}}
      @cancelText={{t 'actions.cancel'}}
    />
  {{/if}}
</Rose::Form>