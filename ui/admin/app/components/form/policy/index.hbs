{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: MPL-2.0
}}

<Rose::Form
  @onSubmit={{this.submit}}
  @cancel={{this.cancel}}
  @disabled={{@model.isSaving}}
  @showEditToggle={{if @model.isNew false true}}
  as |form|
>
  <Hds::Form::TextInput::Field
    @isOptional={{true}}
    @value={{@model.name}}
    @isInvalid={{@model.errors.name}}
    @type='text'
    name='name'
    disabled={{form.disabled}}
    {{on 'input' (set-from-event @model 'name')}}
    as |F|
  >
    <F.Label>{{t 'form.name.label'}}</F.Label>
    <F.HelperText>{{t 'form.name.help'}}</F.HelperText>
    {{#if @model.errors.name}}
      <F.Error as |E|>
        {{#each @model.errors.name as |error|}}
          <E.Message>{{error.message}}</E.Message>
        {{/each}}
      </F.Error>
    {{/if}}
  </Hds::Form::TextInput::Field>
  <Hds::Form::Textarea::Field
    @isOptional={{true}}
    @value={{@model.description}}
    @isInvalid={{@model.errors.description}}
    name='description'
    disabled={{form.disabled}}
    as |F|
  >
    <F.Label>{{t 'form.description.label'}}</F.Label>
    <F.HelperText>{{t 'form.description.help'}}</F.HelperText>
    {{#if @model.errors.description}}
      <F.Error as |E|>
        {{#each @model.errors.description as |error|}}
          <E.Message>{{error.message}}</E.Message>
        {{/each}}
      </F.Error>
    {{/if}}
  </Hds::Form::Textarea::Field>

  {{! retention policy }}
  <Form::Policy::PolicySelection
    @name='retention_policy'
    @disabled={{form.disabled}}
    @onSelect={{this.handlePolicyTypeSelection}}
    @options={{this.listRententionOptions}}
    @isGlobal={{@model.scope.isGlobal}}
    @onInput={{this.handleRetainForInput}}
    @isOverridable={{if @model.isNew true this.retain_for_overridable}}
    @onToggle={{this.handleOverridableToggle}}
    @customInputName='retain_for'
    @isCustomInputVisible={{this.is_custom_retention_selected}}
    @inputValue={{this.retain_days}}
    @selectedOption={{this.selectRetentionPolicyType}}
    @overridableField='retain_for_overridable'
  />

  {{! deletion policy }}
  <Form::Policy::PolicySelection
    @disabled={{form.disabled}}
    @name='deletion_policy'
    @onSelect={{this.handlePolicyTypeSelection}}
    @options={{this.listDeletionOptions}}
    @isGlobal={{@model.scope.isGlobal}}
    @onInput={{this.handleDeleteAfterInput}}
    @isOverridable={{if @model.isNew true this.delete_after_overridable}}
    @onToggle={{this.handleOverridableToggle}}
    @customInputName='delete_after'
    @isCustomInputVisible={{this.is_custom_deletion_selected}}
    @inputValue={{this.delete_days}}
    @selectedOption={{this.selectDeletePolicyType}}
    @overridableField='delete_after_overridable'
    @forceDoNotDelete={{this.disableDeleteOptions}}
  />

  {{#if (can 'save model' @model)}}
    <form.actions
      @enableEditText={{t 'actions.edit-form'}}
      @submitText={{t 'actions.save'}}
      @cancelText={{t 'actions.cancel'}}
    />
  {{/if}}
</Rose::Form>