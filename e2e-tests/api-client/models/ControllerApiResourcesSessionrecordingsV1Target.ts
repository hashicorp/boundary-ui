/* tslint:disable */
/* eslint-disable */
/**
 * Boundary controller HTTP API
 * Welcome to the Boundary controller HTTP API documentation. This page provides a reference guide for using the Boundary controller API, a JSON-based HTTP API. The API implements commonly seen HTTP API patterns for status codes, paths, and errors. See the [API overview](https://developer.hashicorp.com/boundary/docs/api-clients/api) for more information.  Before you read this page, it is useful to understand Boundary\'s [domain model](https://developer.hashicorp.com/boundary/docs/concepts/domain-model) and to be aware of the terminology used here. To get started, search for the service you want to interact with in the sidebar to the left. Each resource in Boundary, such as accounts and credential stores, has its own service. Each service contains all the API endpoints for the resource. ## Status codes - `2XX`: Boundary returns a code between `200` and `299` on success. Generally this is `200`, but implementations should be prepared to accept any `2XX` status code as indicating success. If a call returns a `2XX` code that is not `200`, it follows well-understood semantics for those status codes. - `400`: Boundary returns `400` when a command cannot be completed due to invalid user input, except for a properly-formatted identifier that does not map to an existing resource, which returns a `404` as discussed below. - `401`: Boundary returns `401` if no authentication token is provided or if the provided token is invalid. A valid token that simply does not have permission for a resource returns a `403` instead. A token that is invalid or missing, but where the anonymous user (`u_anon`) is able to successfully perform the action, will not return a `401` but instead will return the result of the action. - `403`: Boundary returns `403` if a provided token was valid but does not have the grants required to perform the requested action. - `404`: Boundary returns `404` if a resource cannot be found. Note that this happens _prior_ to authentication/authorization checking in nearly all cases as the resource information (such as its scope, available actions, etc.) is a required part of that check. As a result, an action against a resource that does not exist returns a `404` instead of a `401` or `403`. While this could be considered an information leak, since IDs are randomly generated and this only discloses whether an ID is valid, it\'s tolerable as it allows for far simpler and more robust client implementation. - `405`: Boundary returns a `405` to indicate that the method (HTTP verb or custom action) is not implemented for the given resource. - `429`: Boundary returns a `429` if any of the API rate limit quotas have been exhausted for the resource and action. It includes the `Retry-After` header so that the client knows how long to wait before making a new request. - `500`: Boundary returns `500` if an error occurred that is not (directly) tied to invalid user input. If a `500` is generated, information about the error is logged to Boundary\'s server log but is not generally provided to the client. - `503`: Boundary returns a `503` if it is unable to store a quota due to the API rate limit being exceeded. It includes the `Retry-After` header so that the client knows how long to wait before making a new request. ## List pagination Boundary uses [API pagination](https://developer.hashicorp.com/boundary/docs/api-clients/api/pagination) to support searching and filtering large lists of results efficiently.
 *
 * The version of the OpenAPI document: 0.19.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ControllerApiResourcesScopesV1ScopeInfo } from './ControllerApiResourcesScopesV1ScopeInfo';
import {
    ControllerApiResourcesScopesV1ScopeInfoFromJSON,
    ControllerApiResourcesScopesV1ScopeInfoFromJSONTyped,
    ControllerApiResourcesScopesV1ScopeInfoToJSON,
    ControllerApiResourcesScopesV1ScopeInfoToJSONTyped,
} from './ControllerApiResourcesScopesV1ScopeInfo';

/**
 * Target describes a target in Boundary.
 * @export
 * @interface ControllerApiResourcesSessionrecordingsV1Target
 */
export interface ControllerApiResourcesSessionrecordingsV1Target {
    /**
     * The ID of the Target.
     * @type {string}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    id?: string;
    /**
     * The name of the Target, if set.
     * @type {string}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    name?: string;
    /**
     * The description of the Target, if set.
     * @type {string}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    description?: string;
    /**
     * 
     * @type {ControllerApiResourcesScopesV1ScopeInfo}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    scope?: ControllerApiResourcesScopesV1ScopeInfo;
    /**
     * Maximum total lifetime of a created Session, in seconds.
     * @type {number}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    sessionMaxSeconds?: number;
    /**
     * Maximum number of connections allowed in a Session.  Unlimited is indicated by the value -1.
     * @type {number}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    sessionConnectionLimit?: number;
    /**
     * Optional boolean expression to filter the workers that are allowed to satisfy this request.
     * @type {string}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    workerFilter?: string;
    /**
     * Optional boolean expressions to filter the egress workers that are allowed to satisfy this request.
     * @type {string}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    egressWorkerFilter?: string;
    /**
     * Optional boolean expressions to filter the ingress workers that are allowed to satisfy this request.
     * @type {string}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    ingressWorkerFilter?: string;
    /**
     * The type of the Target.
     * @type {string}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    type?: string;
    /**
     * The attributes that are applicable for the specific Target.
     * @type {object}
     * @memberof ControllerApiResourcesSessionrecordingsV1Target
     */
    attributes?: object;
}

/**
 * Check if a given object implements the ControllerApiResourcesSessionrecordingsV1Target interface.
 */
export function instanceOfControllerApiResourcesSessionrecordingsV1Target(value: object): value is ControllerApiResourcesSessionrecordingsV1Target {
    return true;
}

export function ControllerApiResourcesSessionrecordingsV1TargetFromJSON(json: any): ControllerApiResourcesSessionrecordingsV1Target {
    return ControllerApiResourcesSessionrecordingsV1TargetFromJSONTyped(json, false);
}

export function ControllerApiResourcesSessionrecordingsV1TargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllerApiResourcesSessionrecordingsV1Target {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'scope': json['scope'] == null ? undefined : ControllerApiResourcesScopesV1ScopeInfoFromJSON(json['scope']),
        'sessionMaxSeconds': json['session_max_seconds'] == null ? undefined : json['session_max_seconds'],
        'sessionConnectionLimit': json['session_connection_limit'] == null ? undefined : json['session_connection_limit'],
        'workerFilter': json['worker_filter'] == null ? undefined : json['worker_filter'],
        'egressWorkerFilter': json['egress_worker_filter'] == null ? undefined : json['egress_worker_filter'],
        'ingressWorkerFilter': json['ingress_worker_filter'] == null ? undefined : json['ingress_worker_filter'],
        'type': json['type'] == null ? undefined : json['type'],
        'attributes': json['attributes'] == null ? undefined : json['attributes'],
    };
}

export function ControllerApiResourcesSessionrecordingsV1TargetToJSON(json: any): ControllerApiResourcesSessionrecordingsV1Target {
    return ControllerApiResourcesSessionrecordingsV1TargetToJSONTyped(json, false);
}

export function ControllerApiResourcesSessionrecordingsV1TargetToJSONTyped(value?: ControllerApiResourcesSessionrecordingsV1Target | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'scope': ControllerApiResourcesScopesV1ScopeInfoToJSON(value['scope']),
        'session_max_seconds': value['sessionMaxSeconds'],
        'session_connection_limit': value['sessionConnectionLimit'],
        'worker_filter': value['workerFilter'],
        'egress_worker_filter': value['egressWorkerFilter'],
        'ingress_worker_filter': value['ingressWorkerFilter'],
        'type': value['type'],
        'attributes': value['attributes'],
    };
}

